{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bishal\\\\OneDrive\\\\Desktop\\\\movie-review-app\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport MovieCarousel from \"../components/MovieCarousel\";\nimport MovieSection from \"../components/MovieSection\";\nimport './Home.css';\nimport MovieCard from \"../components/MovieCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = ({\n  movies,\n  loading,\n  error,\n  searchTerm,\n  fetchMovies,\n  currentPage,\n  onPageChange\n}) => {\n  _s();\n  const [tvSeries, setTvSeries] = useState([]);\n  const [tvLoading, setTvLoading] = useState(false);\n  const location = useLocation();\n  const API_KEY = '9bcdb1078fa24262529f44ab427f223e';\n\n  // Add a fallback for fetchMovies\n  const handleRetry = () => {\n    if (fetchMovies) {\n      fetchMovies();\n    } else {\n      window.location.reload();\n    }\n  };\n  const fetchTvSeries = useCallback(async () => {\n    try {\n      setTvLoading(true);\n      const response = await fetch(`https://api.themoviedb.org/3/tv/popular?api_key=${API_KEY}&language=en-US&page=1`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch TV series');\n      }\n      const data = await response.json();\n      setTvSeries(data.results || []);\n    } catch (error) {\n      console.error('Error fetching TV series:', error);\n      setTvSeries([]);\n    } finally {\n      setTvLoading(false);\n    }\n  }, [API_KEY]);\n  useEffect(() => {\n    if (!searchTerm) {\n      fetchTvSeries();\n    }\n  }, [searchTerm, fetchTvSeries]);\n\n  // Update current page based on route\n  useEffect(() => {\n    const path = location.pathname;\n    if (path === '/movies' && onPageChange) {\n      onPageChange('movies');\n    } else if (path === '/tv-series' && onPageChange) {\n      onPageChange('tvseries');\n    } else if (path === '/top-imdb' && onPageChange) {\n      onPageChange('topimdb');\n    } else if (path === '/profile' && onPageChange) {\n      onPageChange('profile');\n    }\n  }, [location.pathname, onPageChange]);\n  if (loading && !searchTerm) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading Movies...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Something went wrong\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRetry,\n        className: \"retry-button\",\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this);\n  }\n  const safeMovies = Array.isArray(movies) ? movies : [];\n  const safeTvSeries = Array.isArray(tvSeries) ? tvSeries : [];\n  const topMovies = [...safeMovies].sort((a, b) => b.vote_average - a.vote_average).slice(0, 5);\n  const getSectionMovies = (sourceMovies, count = 16) => {\n    const safeSource = Array.isArray(sourceMovies) ? sourceMovies : [];\n    const shuffled = [...safeSource].sort(() => Math.random() - 0.5);\n    if (shuffled.length < count) {\n      const repeatedMovies = [];\n      while (repeatedMovies.length < count) {\n        repeatedMovies.push(...shuffled);\n      }\n      return repeatedMovies.slice(0, count);\n    }\n    return shuffled.slice(0, count);\n  };\n  const suggestions = getSectionMovies([...safeMovies], 16);\n  const latestMovies = getSectionMovies([...safeMovies], 16);\n  const tvSeriesData = getSectionMovies([...safeTvSeries], 16);\n\n  // Different layouts based on current page\n  const renderPageContent = () => {\n    if (searchTerm) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"home-page\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"search-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"Search Results for \\\"\", searchTerm, \"\\\"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Found \", safeMovies.length, \" movies\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: fetchMovies || handleRetry,\n            className: \"refresh-button\",\n            children: \"Show Popular Movies\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movies-grid\",\n          children: safeMovies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n            movie: movie\n          }, movie.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this);\n    }\n\n    // Different content based on current page\n    switch (currentPage) {\n      case 'movies':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"home-page\",\n          children: [/*#__PURE__*/_jsxDEV(\"header\", {\n            className: \"page-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"All Movies\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Browse our complete movie collection\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movies-grid\",\n            children: safeMovies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n              movie: movie\n            }, movie.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this);\n      case 'tvseries':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"home-page\",\n          children: [/*#__PURE__*/_jsxDEV(\"header\", {\n            className: \"page-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"TV Series\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Discover popular TV shows\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this), !tvLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movies-grid\",\n            children: tvSeriesData.map(series => /*#__PURE__*/_jsxDEV(MovieCard, {\n              movie: series,\n              isTvSeries: true\n            }, series.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Loading TV Series...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this);\n      case 'topimdb':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"home-page\",\n          children: [/*#__PURE__*/_jsxDEV(\"header\", {\n            className: \"page-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Top IMDB Movies\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Highest rated movies according to IMDB\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movies-grid\",\n            children: topMovies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n              movie: movie\n            }, movie.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"home-page\",\n          children: [/*#__PURE__*/_jsxDEV(MovieCarousel, {\n            movies: topMovies\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sections-container\",\n            children: [/*#__PURE__*/_jsxDEV(MovieSection, {\n              title: \"Suggestions For You\",\n              movies: suggestions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(MovieSection, {\n              title: \"Latest Movies\",\n              movies: latestMovies\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 29\n            }, this), !tvLoading ? tvSeriesData.length > 0 && /*#__PURE__*/_jsxDEV(MovieSection, {\n              title: \"TV Series\",\n              movies: tvSeriesData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Loading TV Series...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"spinner\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this);\n    }\n  };\n  return renderPageContent();\n};\n_s(Home, \"X4FownQlS0ShkPMWr4v01C4+fBk=\", false, function () {\n  return [useLocation];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useLocation","MovieCarousel","MovieSection","MovieCard","jsxDEV","_jsxDEV","Home","movies","loading","error","searchTerm","fetchMovies","currentPage","onPageChange","_s","tvSeries","setTvSeries","tvLoading","setTvLoading","location","API_KEY","handleRetry","window","reload","fetchTvSeries","response","fetch","ok","Error","data","json","results","console","path","pathname","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","safeMovies","Array","isArray","safeTvSeries","topMovies","sort","a","b","vote_average","slice","getSectionMovies","sourceMovies","count","safeSource","shuffled","Math","random","length","repeatedMovies","push","suggestions","latestMovies","tvSeriesData","renderPageContent","map","movie","id","series","isTvSeries","title","_c","$RefreshReg$"],"sources":["C:/Users/Bishal/OneDrive/Desktop/movie-review-app/frontend/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport MovieCarousel from \"../components/MovieCarousel\";\r\nimport MovieSection from \"../components/MovieSection\";\r\nimport './Home.css';\r\nimport MovieCard from \"../components/MovieCard\";\r\n\r\nconst Home = ({ movies, loading, error, searchTerm, fetchMovies, currentPage, onPageChange }) => {\r\n    const [tvSeries, setTvSeries] = useState([]);\r\n    const [tvLoading, setTvLoading] = useState(false);\r\n    const location = useLocation();\r\n\r\n    const API_KEY = '9bcdb1078fa24262529f44ab427f223e';\r\n\r\n    // Add a fallback for fetchMovies\r\n    const handleRetry = () => {\r\n        if (fetchMovies) {\r\n            fetchMovies();\r\n        } else {\r\n            window.location.reload();\r\n        }\r\n    };\r\n\r\n    const fetchTvSeries = useCallback(async () => {\r\n        try {\r\n            setTvLoading(true);\r\n            const response = await fetch(`https://api.themoviedb.org/3/tv/popular?api_key=${API_KEY}&language=en-US&page=1`);\r\n            if (!response.ok) {\r\n                throw new Error('Failed to fetch TV series');\r\n            }\r\n            const data = await response.json();\r\n            setTvSeries(data.results || []);\r\n        } catch (error) {\r\n            console.error('Error fetching TV series:', error);\r\n            setTvSeries([]);\r\n        } finally {\r\n            setTvLoading(false);\r\n        }\r\n    }, [API_KEY]);\r\n\r\n    useEffect(() => {\r\n        if (!searchTerm) {\r\n            fetchTvSeries();\r\n        }\r\n    }, [searchTerm, fetchTvSeries]);\r\n\r\n    // Update current page based on route\r\n    useEffect(() => {\r\n        const path = location.pathname;\r\n        if (path === '/movies' && onPageChange) {\r\n            onPageChange('movies');\r\n        } else if (path === '/tv-series' && onPageChange) {\r\n            onPageChange('tvseries');\r\n        } else if (path === '/top-imdb' && onPageChange) {\r\n            onPageChange('topimdb');\r\n        } else if (path === '/profile' && onPageChange) {\r\n            onPageChange('profile');\r\n        }\r\n    }, [location.pathname, onPageChange]);\r\n\r\n    if (loading && !searchTerm) {\r\n        return (\r\n            <div className=\"loading\">\r\n                <h2>Loading Movies...</h2>\r\n                <div className=\"spinner\"></div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <div className=\"error\">\r\n                <h2>Something went wrong</h2>\r\n                <p>{error}</p>\r\n                <button onClick={handleRetry} className=\"retry-button\">Retry</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const safeMovies = Array.isArray(movies) ? movies : [];\r\n    const safeTvSeries = Array.isArray(tvSeries) ? tvSeries : [];\r\n\r\n    const topMovies = [...safeMovies].sort((a, b) => b.vote_average - a.vote_average).slice(0, 5);\r\n\r\n    const getSectionMovies = (sourceMovies, count = 16) => {\r\n        const safeSource = Array.isArray(sourceMovies) ? sourceMovies : [];\r\n        const shuffled = [...safeSource].sort(() => Math.random() - 0.5);\r\n        if (shuffled.length < count) {\r\n            const repeatedMovies = [];\r\n            while (repeatedMovies.length < count) {\r\n                repeatedMovies.push(...shuffled);\r\n            }\r\n            return repeatedMovies.slice(0, count);\r\n        }\r\n        return shuffled.slice(0, count);\r\n    };\r\n\r\n    const suggestions = getSectionMovies([...safeMovies], 16);\r\n    const latestMovies = getSectionMovies([...safeMovies], 16);\r\n    const tvSeriesData = getSectionMovies([...safeTvSeries], 16);\r\n\r\n    // Different layouts based on current page\r\n    const renderPageContent = () => {\r\n        if (searchTerm) {\r\n            return (\r\n                <div className=\"home-page\">\r\n                    <header className=\"search-header\">\r\n                        <h1>Search Results for \"{searchTerm}\"</h1>\r\n                        <p>Found {safeMovies.length} movies</p>\r\n                        <button onClick={fetchMovies || handleRetry} className=\"refresh-button\">\r\n                            Show Popular Movies\r\n                        </button>\r\n                    </header>\r\n\r\n                    <div className=\"movies-grid\">\r\n                        {safeMovies.map((movie) => (\r\n                            <MovieCard key={movie.id} movie={movie} />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        // Different content based on current page\r\n        switch (currentPage) {\r\n            case 'movies':\r\n                return (\r\n                    <div className=\"home-page\">\r\n                        <header className=\"page-header\">\r\n                            <h1>All Movies</h1>\r\n                            <p>Browse our complete movie collection</p>\r\n                        </header>\r\n                        <div className=\"movies-grid\">\r\n                            {safeMovies.map((movie) => (\r\n                                <MovieCard key={movie.id} movie={movie} />\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                );\r\n\r\n            case 'tvseries':\r\n                return (\r\n                    <div className=\"home-page\">\r\n                        <header className=\"page-header\">\r\n                            <h1>TV Series</h1>\r\n                            <p>Discover popular TV shows</p>\r\n                        </header>\r\n                        {!tvLoading ? (\r\n                            <div className=\"movies-grid\">\r\n                                {tvSeriesData.map((series) => (\r\n                                    <MovieCard key={series.id} movie={series} isTvSeries={true} />\r\n                                ))}\r\n                            </div>\r\n                        ) : (\r\n                            <div className=\"loading\">\r\n                                <h2>Loading TV Series...</h2>\r\n                                <div className=\"spinner\"></div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                );\r\n\r\n            case 'topimdb':\r\n                return (\r\n                    <div className=\"home-page\">\r\n                        <header className=\"page-header\">\r\n                            <h1>Top IMDB Movies</h1>\r\n                            <p>Highest rated movies according to IMDB</p>\r\n                        </header>\r\n                        <div className=\"movies-grid\">\r\n                            {topMovies.map((movie) => (\r\n                                <MovieCard key={movie.id} movie={movie} />\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                );\r\n\r\n            default:\r\n                return (\r\n                    <div className=\"home-page\">\r\n                        <MovieCarousel movies={topMovies} />\r\n                        <div className=\"sections-container\">\r\n                            <MovieSection\r\n                                title=\"Suggestions For You\"\r\n                                movies={suggestions}\r\n                            />\r\n                            <MovieSection\r\n                                title=\"Latest Movies\"\r\n                                movies={latestMovies}\r\n                            />\r\n                            {!tvLoading ? (\r\n                                tvSeriesData.length > 0 && (\r\n                                    <MovieSection\r\n                                        title=\"TV Series\"\r\n                                        movies={tvSeriesData}\r\n                                    />\r\n                                )\r\n                            ) : (\r\n                                <div className=\"loading\">\r\n                                    <h2>Loading TV Series...</h2>\r\n                                    <div className=\"spinner\"></div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                );\r\n        }\r\n    };\r\n\r\n    return renderPageContent();\r\n};\r\n\r\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}