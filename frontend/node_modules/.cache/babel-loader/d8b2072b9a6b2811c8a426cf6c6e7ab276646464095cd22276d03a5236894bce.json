{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bishal\\\\OneDrive\\\\Desktop\\\\movie-review-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { BrowserRouter as Router, Routes, Route, useLocation } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Home from './pages/Home';\nimport Movies from './pages/Movies';\nimport TVSeries from './pages/TvSeries';\nimport TopIMDB from './pages/TopImDb';\nimport MovieDetail from './pages/MovieDetail';\nimport Profile from './pages/Profile';\nimport { AuthProvider } from './context/AuthContext';\nimport { movieAPI } from './services/api';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ScrollToTop() {\n  _s();\n  const {\n    pathname\n  } = useLocation();\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n  return null;\n}\n_s(ScrollToTop, \"+8VPq4+XDMjo/kjL3WLkbwU2Amg=\", false, function () {\n  return [useLocation];\n});\n_c = ScrollToTop;\nfunction App() {\n  _s2();\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isSearching, setIsSearching] = useState(false);\n  const fetchMovies = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const data = await movieAPI.getPopularMovies();\n      if (data && data.results) {\n        setMovies(data.results);\n      } else {\n        throw new Error('No movies data received from API');\n      }\n    } catch (error) {\n      console.error('Error fetching movies:', error);\n      setError(error.message);\n      setMovies([]);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  const handleSearch = async searchQuery => {\n    setSearchTerm(searchQuery);\n    if (searchQuery.trim() === '') {\n      setIsSearching(false);\n      await fetchMovies();\n    } else {\n      setIsSearching(true);\n      setLoading(true);\n      try {\n        const data = await movieAPI.searchMovies(searchQuery);\n        setMovies(data.results || []);\n      } catch (error) {\n        setError('Search failed: ' + error.message);\n        setMovies([]);\n      } finally {\n        setLoading(false);\n      }\n    }\n  };\n  const clearSearch = () => {\n    setSearchTerm('');\n    setIsSearching(false);\n    fetchMovies();\n  };\n  useEffect(() => {\n    fetchMovies();\n  }, [fetchMovies]);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(AuthProvider, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(ScrollToTop, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Navbar, {\n          searchTerm: searchTerm,\n          onSearchChange: handleSearch,\n          onClearSearch: clearSearch,\n          resultsCount: movies.length,\n          isSearching: isSearching\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-content\",\n          children: /*#__PURE__*/_jsxDEV(Routes, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              element: /*#__PURE__*/_jsxDEV(Home, {\n                movies: movies,\n                loading: loading,\n                error: error,\n                searchTerm: searchTerm,\n                fetchMovies: fetchMovies\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/movies\",\n              element: /*#__PURE__*/_jsxDEV(Movies, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 60\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/tv-series\",\n              element: /*#__PURE__*/_jsxDEV(TVSeries, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 63\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/top-imdb\",\n              element: /*#__PURE__*/_jsxDEV(TopIMDB, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 62\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/movie/:id\",\n              element: /*#__PURE__*/_jsxDEV(MovieDetail, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 63\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/profile\",\n              element: /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 61\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"*\",\n              element: /*#__PURE__*/_jsxDEV(Home, {\n                movies: movies,\n                loading: loading,\n                error: error,\n                searchTerm: searchTerm,\n                fetchMovies: fetchMovies\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 54\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n_s2(App, \"C3EYkFcVOELxRHLEnsdrdwKXTaI=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"ScrollToTop\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","BrowserRouter","Router","Routes","Route","useLocation","Navbar","Home","Movies","TVSeries","TopIMDB","MovieDetail","Profile","AuthProvider","movieAPI","jsxDEV","_jsxDEV","ScrollToTop","_s","pathname","window","scrollTo","_c","App","_s2","movies","setMovies","loading","setLoading","error","setError","searchTerm","setSearchTerm","isSearching","setIsSearching","fetchMovies","data","getPopularMovies","results","Error","console","message","handleSearch","searchQuery","trim","searchMovies","clearSearch","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSearchChange","onClearSearch","resultsCount","length","path","element","_c2","$RefreshReg$"],"sources":["C:/Users/Bishal/OneDrive/Desktop/movie-review-app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, useLocation } from 'react-router-dom';\r\nimport Navbar from './components/Navbar';\r\nimport Home from './pages/Home';\r\nimport Movies from './pages/Movies';\r\nimport TVSeries from './pages/TvSeries';\r\nimport TopIMDB from './pages/TopImDb';\r\nimport MovieDetail from './pages/MovieDetail';\r\nimport Profile from './pages/Profile';\r\nimport { AuthProvider } from './context/AuthContext';\r\nimport { movieAPI } from './services/api';\r\nimport './App.css';\r\n\r\nfunction ScrollToTop() {\r\n    const { pathname } = useLocation();\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, [pathname]);\r\n\r\n    return null;\r\n}\r\n\r\nfunction App() {\r\n    const [movies, setMovies] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [isSearching, setIsSearching] = useState(false);\r\n\r\n    const fetchMovies = useCallback(async () => {\r\n        try {\r\n            setLoading(true);\r\n            setError(null);\r\n            const data = await movieAPI.getPopularMovies();\r\n\r\n            if (data && data.results) {\r\n                setMovies(data.results);\r\n            } else {\r\n                throw new Error('No movies data received from API');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching movies:', error);\r\n            setError(error.message);\r\n            setMovies([]);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, []);\r\n\r\n    const handleSearch = async (searchQuery) => {\r\n        setSearchTerm(searchQuery);\r\n        if (searchQuery.trim() === '') {\r\n            setIsSearching(false);\r\n            await fetchMovies();\r\n        } else {\r\n            setIsSearching(true);\r\n            setLoading(true);\r\n            try {\r\n                const data = await movieAPI.searchMovies(searchQuery);\r\n                setMovies(data.results || []);\r\n            } catch (error) {\r\n                setError('Search failed: ' + error.message);\r\n                setMovies([]);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        }\r\n    };\r\n\r\n    const clearSearch = () => {\r\n        setSearchTerm('');\r\n        setIsSearching(false);\r\n        fetchMovies();\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchMovies();\r\n    }, [fetchMovies]);\r\n\r\n    return (\r\n        <Router>\r\n            <AuthProvider>\r\n                <div className=\"App\">\r\n                    <ScrollToTop />\r\n                    <Navbar\r\n                        searchTerm={searchTerm}\r\n                        onSearchChange={handleSearch}\r\n                        onClearSearch={clearSearch}\r\n                        resultsCount={movies.length}\r\n                        isSearching={isSearching}\r\n                    />\r\n\r\n                    <div className=\"main-content\">\r\n                        <Routes>\r\n                            <Route path=\"/\" element={\r\n                                <Home\r\n                                    movies={movies}\r\n                                    loading={loading}\r\n                                    error={error}\r\n                                    searchTerm={searchTerm}\r\n                                    fetchMovies={fetchMovies}\r\n                                />\r\n                            } />\r\n                            <Route path=\"/movies\" element={<Movies />} />\r\n                            <Route path=\"/tv-series\" element={<TVSeries />} />\r\n                            <Route path=\"/top-imdb\" element={<TopIMDB />} />\r\n                            <Route path=\"/movie/:id\" element={<MovieDetail />} />\r\n                            <Route path=\"/profile\" element={<Profile />} />\r\n                            <Route path=\"*\" element={<Home\r\n                                movies={movies}\r\n                                loading={loading}\r\n                                error={error}\r\n                                searchTerm={searchTerm}\r\n                                fetchMovies={fetchMovies}\r\n                            />} />\r\n                        </Routes>\r\n                    </div>\r\n                </div>\r\n            </AuthProvider>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}