{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bishal\\\\OneDrive\\\\Desktop\\\\movie-review-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Home from './pages/Home';\nimport Movies from './pages/Movies';\nimport TVSeries from './pages/TVSeries';\nimport TopIMDB from './pages/TopIMDB';\nimport MovieDetail from './pages/MovieDetail';\nimport Profile from './pages/Profile';\nimport { AuthProvider } from './context/AuthContext';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const API_KEY = '9bcdb1078fa24262529f44ab427f223e';\n  const MOVIES_API_URL = `https://api.themoviedb.org/3/movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n  const searchMoviesFromAPI = useCallback(async query => {\n    try {\n      const response = await fetch(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1`);\n      if (!response.ok) {\n        throw new Error('Failed to search movies');\n      }\n      const data = await response.json();\n      return data.results || [];\n    } catch (error) {\n      setError('Search Failed: ' + error.message);\n      return [];\n    }\n  }, [API_KEY]);\n  const handleSearch = async searchQuery => {\n    setSearchTerm(searchQuery);\n    if (searchQuery.trim() === '') {\n      fetchMovies();\n    } else {\n      setLoading(true);\n      const searchResults = await searchMoviesFromAPI(searchQuery);\n      setMovies(searchResults);\n      setLoading(false);\n    }\n  };\n  const clearSearch = () => {\n    setSearchTerm('');\n    fetchMovies();\n  };\n  const fetchMovies = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      console.log('Fetching movies...');\n      const response = await fetch(MOVIES_API_URL);\n      if (!response.ok) {\n        throw new Error('Failed to fetch movies');\n      }\n      const data = await response.json();\n      setMovies(data.results || []);\n    } catch (error) {\n      setError(error.message);\n      setMovies([]);\n    } finally {\n      setLoading(false);\n    }\n  }, [MOVIES_API_URL]);\n  useEffect(() => {\n    fetchMovies();\n  }, [fetchMovies]);\n  return /*#__PURE__*/_jsxDEV(AuthProvider, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-container\",\n        children: /*#__PURE__*/_jsxDEV(Navbar, {\n          searchTerm: searchTerm,\n          onSearchChange: handleSearch,\n          onClearSearch: clearSearch,\n          resultsCount: movies.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {\n            movies: movies,\n            loading: loading,\n            error: error,\n            fetchMovies: fetchMovies,\n            searchTerm: searchTerm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/movies\",\n          element: /*#__PURE__*/_jsxDEV(Movies, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 52\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/tv-series\",\n          element: /*#__PURE__*/_jsxDEV(TVSeries, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/top-imdb\",\n          element: /*#__PURE__*/_jsxDEV(TopIMDB, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/movie/:id\",\n          element: /*#__PURE__*/_jsxDEV(MovieDetail, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/profile\",\n          element: /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"FrlIKxGdLdQJeSAFHPwuTpONbRE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","Navbar","Home","Movies","TVSeries","TopIMDB","MovieDetail","Profile","AuthProvider","jsxDEV","_jsxDEV","App","_s","movies","setMovies","useState","loading","setLoading","error","setError","searchTerm","setSearchTerm","API_KEY","MOVIES_API_URL","searchMoviesFromAPI","useCallback","query","response","fetch","ok","Error","data","json","results","message","handleSearch","searchQuery","trim","fetchMovies","searchResults","clearSearch","console","log","useEffect","children","className","onSearchChange","onClearSearch","resultsCount","length","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["C:/Users/Bishal/OneDrive/Desktop/movie-review-app/frontend/src/App.js"],"sourcesContent":["import React from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport Navbar from './components/Navbar';\r\nimport Home from './pages/Home';\r\nimport Movies from './pages/Movies';\r\nimport TVSeries from './pages/TVSeries';\r\nimport TopIMDB from './pages/TopIMDB';\r\nimport MovieDetail from './pages/MovieDetail';\r\nimport Profile from './pages/Profile';\r\nimport { AuthProvider } from './context/AuthContext';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n    const [movies, setMovies] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n\r\n    const API_KEY = '9bcdb1078fa24262529f44ab427f223e';\r\n    const MOVIES_API_URL = `https://api.themoviedb.org/3/movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\r\n\r\n    const searchMoviesFromAPI = useCallback(async (query) => {\r\n        try {\r\n            const response = await fetch(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1`);\r\n            if (!response.ok) {\r\n                throw new Error('Failed to search movies');\r\n            }\r\n            const data = await response.json();\r\n            return data.results || [];\r\n        } catch (error) {\r\n            setError('Search Failed: ' + error.message);\r\n            return [];\r\n        }\r\n    }, [API_KEY]);\r\n\r\n    const handleSearch = async (searchQuery) => {\r\n        setSearchTerm(searchQuery);\r\n        if (searchQuery.trim() === '') {\r\n            fetchMovies();\r\n        } else {\r\n            setLoading(true);\r\n            const searchResults = await searchMoviesFromAPI(searchQuery);\r\n            setMovies(searchResults);\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const clearSearch = () => {\r\n        setSearchTerm('');\r\n        fetchMovies();\r\n    };\r\n\r\n    const fetchMovies = useCallback(async () => {\r\n        try {\r\n            setLoading(true);\r\n            setError(null);\r\n            console.log('Fetching movies...')\r\n\r\n\r\n            const response = await fetch(MOVIES_API_URL);\r\n            if (!response.ok) {\r\n                throw new Error('Failed to fetch movies');\r\n            }\r\n            const data = await response.json();\r\n            setMovies(data.results || []);\r\n\r\n        } catch (error) {\r\n            setError(error.message);\r\n            setMovies([]);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [MOVIES_API_URL]);\r\n\r\n    useEffect(() => {\r\n        fetchMovies();\r\n    }, [fetchMovies]);\r\n\r\n    return (\r\n        <AuthProvider>\r\n            <div className=\"App\">\r\n                <div className='navbar-container'>\r\n                    <Navbar\r\n                        searchTerm={searchTerm}\r\n                        onSearchChange={handleSearch}\r\n                        onClearSearch={clearSearch}\r\n                        resultsCount={movies.length}\r\n                    />\r\n                </div>\r\n\r\n\r\n                <Routes>\r\n                    <Route path=\"/\" element={\r\n                        <Home\r\n                            movies={movies}\r\n                            loading={loading}\r\n                            error={error}\r\n                            fetchMovies={fetchMovies}\r\n                            searchTerm={searchTerm}\r\n                        />\r\n                    } />\r\n                    <Route path='/movies' element={<Movies />} />\r\n                    <Route path='/tv-series' element={<TVSeries />} />\r\n                    <Route path='/top-imdb' element={<TopIMDB />} />\r\n                    <Route path=\"/movie/:id\" element={<MovieDetail />} />\r\n                    <Route path='/profile' element={<Profile />} />\r\n                </Routes>\r\n            </div>\r\n        </AuthProvider>\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AACzE,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,MAAM,MAAM,gBAAgB;AACnC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,OAAO,MAAM,iBAAiB;AACrC,OAAOC,WAAW,MAAM,qBAAqB;AAC7C,OAAOC,OAAO,MAAM,iBAAiB;AACrC,SAASC,YAAY,QAAQ,uBAAuB;AACpD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGF,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACK,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMO,OAAO,GAAG,kCAAkC;EAClD,MAAMC,cAAc,GAAG,sDAAsDD,OAAO,wBAAwB;EAE5G,MAAME,mBAAmB,GAAGC,WAAW,CAAC,MAAOC,KAAK,IAAK;IACrD,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qDAAqDN,OAAO,yBAAyBI,KAAK,SAAS,CAAC;MACjI,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;MAC9C;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClC,OAAOD,IAAI,CAACE,OAAO,IAAI,EAAE;IAC7B,CAAC,CAAC,OAAOf,KAAK,EAAE;MACZC,QAAQ,CAAC,iBAAiB,GAAGD,KAAK,CAACgB,OAAO,CAAC;MAC3C,OAAO,EAAE;IACb;EACJ,CAAC,EAAE,CAACZ,OAAO,CAAC,CAAC;EAEb,MAAMa,YAAY,GAAG,MAAOC,WAAW,IAAK;IACxCf,aAAa,CAACe,WAAW,CAAC;IAC1B,IAAIA,WAAW,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC3BC,WAAW,CAAC,CAAC;IACjB,CAAC,MAAM;MACHrB,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMsB,aAAa,GAAG,MAAMf,mBAAmB,CAACY,WAAW,CAAC;MAC5DtB,SAAS,CAACyB,aAAa,CAAC;MACxBtB,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAED,MAAMuB,WAAW,GAAGA,CAAA,KAAM;IACtBnB,aAAa,CAAC,EAAE,CAAC;IACjBiB,WAAW,CAAC,CAAC;EACjB,CAAC;EAED,MAAMA,WAAW,GAAGb,WAAW,CAAC,YAAY;IACxC,IAAI;MACAR,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;MACdsB,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;MAGjC,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAACL,cAAc,CAAC;MAC5C,IAAI,CAACI,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;MAC7C;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClClB,SAAS,CAACiB,IAAI,CAACE,OAAO,IAAI,EAAE,CAAC;IAEjC,CAAC,CAAC,OAAOf,KAAK,EAAE;MACZC,QAAQ,CAACD,KAAK,CAACgB,OAAO,CAAC;MACvBpB,SAAS,CAAC,EAAE,CAAC;IACjB,CAAC,SAAS;MACNG,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC,EAAE,CAACM,cAAc,CAAC,CAAC;EAEpBoB,SAAS,CAAC,MAAM;IACZL,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjB,oBACI5B,OAAA,CAACF,YAAY;IAAAoC,QAAA,eACTlC,OAAA;MAAKmC,SAAS,EAAC,KAAK;MAAAD,QAAA,gBAChBlC,OAAA;QAAKmC,SAAS,EAAC,kBAAkB;QAAAD,QAAA,eAC7BlC,OAAA,CAACT,MAAM;UACHmB,UAAU,EAAEA,UAAW;UACvB0B,cAAc,EAAEX,YAAa;UAC7BY,aAAa,EAAEP,WAAY;UAC3BQ,YAAY,EAAEnC,MAAM,CAACoC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAGN3C,OAAA,CAACX,MAAM;QAAA6C,QAAA,gBACHlC,OAAA,CAACV,KAAK;UAACsD,IAAI,EAAC,GAAG;UAACC,OAAO,eACnB7C,OAAA,CAACR,IAAI;YACDW,MAAM,EAAEA,MAAO;YACfG,OAAO,EAAEA,OAAQ;YACjBE,KAAK,EAAEA,KAAM;YACboB,WAAW,EAAEA,WAAY;YACzBlB,UAAU,EAAEA;UAAW;YAAA8B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1B;QACJ;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACJ3C,OAAA,CAACV,KAAK;UAACsD,IAAI,EAAC,SAAS;UAACC,OAAO,eAAE7C,OAAA,CAACP,MAAM;YAAA+C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC7C3C,OAAA,CAACV,KAAK;UAACsD,IAAI,EAAC,YAAY;UAACC,OAAO,eAAE7C,OAAA,CAACN,QAAQ;YAAA8C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAClD3C,OAAA,CAACV,KAAK;UAACsD,IAAI,EAAC,WAAW;UAACC,OAAO,eAAE7C,OAAA,CAACL,OAAO;YAAA6C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAChD3C,OAAA,CAACV,KAAK;UAACsD,IAAI,EAAC,YAAY;UAACC,OAAO,eAAE7C,OAAA,CAACJ,WAAW;YAAA4C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACrD3C,OAAA,CAACV,KAAK;UAACsD,IAAI,EAAC,UAAU;UAACC,OAAO,eAAE7C,OAAA,CAACH,OAAO;YAAA2C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEvB;AAACzC,EAAA,CAlGQD,GAAG;AAAA6C,EAAA,GAAH7C,GAAG;AAoGZ,eAAeA,GAAG;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}