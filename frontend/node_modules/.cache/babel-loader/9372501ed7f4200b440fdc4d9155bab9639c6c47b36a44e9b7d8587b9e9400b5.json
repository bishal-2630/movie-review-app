{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bishal\\\\OneDrive\\\\Desktop\\\\movie-review-app\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { authAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const checkAuthStatus = async () => {\n    const token = localStorage.getItem('authToken');\n    if (token) {\n      try {\n        const userData = await authAPI.getCurrentUser();\n        setUser(userData);\n        setIsAuthenticated(true);\n      } catch (error) {\n        console.error('Auth check failed:'.error);\n        logout();\n      }\n    }\n    setLoading(false);\n  };\n  const login = async (email, password) => {\n    try {\n      const response = await authAPI.login({\n        email,\n        password\n      });\n      localStorage.setItem('authToken', response.access_token);\n      setUser(response.user);\n      setIsAuthenticated(true);\n      return {\n        success: true,\n        data: response\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await authAPI.register(userData);\n      const loginResponse = await login(userData.email, userData.password);\n      return loginResponse;\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('authToken');\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n  const value = {\n    user,\n    loading,\n    isAuthenticated,\n    login,\n    register,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n_s2(AuthProvider, \"qeIXzjFCaRBYmnNbhd1V8WBgsMA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","authAPI","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","isAuthenticated","setIsAuthenticated","checkAuthStatus","token","localStorage","getItem","userData","getCurrentUser","error","console","logout","login","email","password","response","setItem","access_token","success","data","message","register","loginResponse","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Bishal/OneDrive/Desktop/movie-review-app/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport { authAPI } from '../services/api';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n    const context = useContext(AuthContext);\r\n    if (!context) {\r\n        throw new Error('useAuth must be used within an AuthProvider');\r\n    }\r\n    return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n    const checkAuthStatus = async () => {\r\n        const token = localStorage.getItem('authToken');\r\n        if (token) {\r\n            try {\r\n                const userData = await authAPI.getCurrentUser();\r\n                setUser(userData);\r\n                setIsAuthenticated(true);\r\n            } catch (error) {\r\n                console.error('Auth check failed:'.error);\r\n                logout();\r\n            }\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    const login = async (email, password) => {\r\n        try {\r\n            const response = await authAPI.login({ email, password });\r\n\r\n            localStorage.setItem('authToken', response.access_token);\r\n            setUser(response.user);\r\n            setIsAuthenticated(true);\r\n\r\n            return { success: true, data: response };\r\n        } catch (error) {\r\n            return { success: false, error: error.message };\r\n        }\r\n    };\r\n\r\n    const register = async (userData) => {\r\n        try {\r\n            const response = await authAPI.register(userData);\r\n\r\n            const loginResponse = await login(userData.email, userData.password);\r\n            return loginResponse;\r\n        } catch (error) {\r\n            return { success: false, error: error.message };\r\n        }\r\n    };\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem('authToken');\r\n        setUser(null);\r\n        setIsAuthenticated(false);\r\n    };\r\n\r\n    const value = {\r\n        user,\r\n        loading,\r\n        isAuthenticated,\r\n        login,\r\n        register,\r\n        logout,\r\n    };\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}